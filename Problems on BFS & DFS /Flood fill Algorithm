class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        if(image[sr][sc] == newColor) {
            return image;
        }
        
        int initialColor = image[sr][sc];
        int ans[][] = image;
        int delRow[] = {-1, 0, +1, 0};
        int delCol[] = {0, +1, 0, -1};
        dfs(sr, sc, initialColor, newColor, ans, image, delRow, delCol);
        return ans;
    }
    
    public void dfs(int row, int col, int initialColor, int newColor, int ans[][], int image[][], int delRow[], int delCol[]) {
        ans[row][col] = newColor;
        int n = image.length;
        int m = image[0].length;
        
        for(int i = 0; i < 4; i++) {
            int nRow = row + delRow[i];
            int nCol = col + delCol[i];
            if(nRow >= 0 && nRow < n && nCol >= 0 && nCol < m && 
            image[nRow][nCol] == initialColor && ans[nRow][nCol] != newColor) {
                dfs(nRow, nCol, initialColor, newColor, ans, image, delRow, delCol);
            }
        }
        
    }
}
